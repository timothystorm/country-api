name: Build
run-name: üõ†Ô∏è Build - ${{ github.actor }}
on:
  #  push:
  #    branches:
  #     - main
  #     - 'release/**'
  #     - 'bugfix/**'
  #     - 'hotfix/**'
  #     - 'chore/**'
  #     - 'docs/**'
  #  pull_request:
  #    branches:
  #      - main
  #      - 'release/**'
  #      - 'bugfix/**'
  #      - 'hotfix/**'
  #      - 'chore/**'
  #      - 'docs/**'
  workflow_dispatch: # allow manual triggering
  workflow_call: # chainable

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      API_IMAGE_NAME: country-api
      API_IMAGE_VERSION: ${{ github.sha }}

    steps:
      - name: üßº Cleanup
        run: rm -rf build/

      - name: üßæ Checkout source code
        uses: actions/checkout@v4

      - name: ‚òï Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: üîë Grant permissions
        run: chmod +x ./gradlew

      - name: üß™+ üõ†Ô∏è Test and build app
        run: ./gradlew clean build --console=auto -Dorg.gradle.logging.level=LIFECYCLE

      - name: üê≥ Build image
        run: docker build -t "country-api:${{ env.API_IMAGE_VERSION }}" .

      - name: üì¶ Package image
        run: docker save "${{ env.API_IMAGE_NAME }}:${{ env.API_IMAGE_VERSION }}" | gzip > "${{ env.API_IMAGE_NAME }}.tar.gz"

      - name: ‚¨ÜÔ∏è Store image artifact
        uses: actions/upload-artifact@v4
        with:
          name: country-api
          path: ${{ env.API_IMAGE_NAME }}.tar.gz